LPI <- read.csv(file.choose())
LPI
View(LPI)
View(LPI)
install.packages(tidyr)
install.packages(dplyr)
install.packages(ggplot2)
install.packages(readr)
install.packages(gridExtra)
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("readr")
install.packages("gridExtra")
library(tidyr)
library(dplyr)
library(ggplot2)
library(readr)
library(gridExtra)
LPI2 <- gather(LPI, "year", "abundance", 9:53)
View(LPI2)
?gather
LPI2$year <- parse_number(LPI2$year)
str(LPI2)
LPI2$abundance <- as.numeric(LPI2$abundance)
Species <- LPI2$Common.Name
view (Species)
Species <- as.character(Species)
view (Species)
show(Species)
bird <- filter(LPI2, Common.Name == "Grey seal")
head(vulture)
bird <- filter(LPI2, Common.Name == "Grey seal")
head(bird)
bird_no_na <- na.omit(bird)
View(bird_no_na)
View(bird_no_na)
base_hist <- hist(bird$abundance)
+ geom_istogram()
base_hist <- hist(bird$abundance)
+ geom_istogram()
library(ggplot2)
library(ggplot2)
base_hist <- hist(bird$abundance)
+ geom_istogram()
base_hist <- hist(bird$abundance)
+ geom_histogram()
base_hist <- ggplot(bird$abundance)
+ geom_histogram()
base_hist <- ggplot(bird$abundance)
+ geom_histogram()
bird <- filter(LPI2, Common.Name == "Grey seal")
head(bird)
bird_no_na <- na.omit(bird)
base_hist <- ggplot(bird$abundance)
+ geom_histogram()
base_hist <- ggplot(bird, aes(x=abundance))
+ geom_histogram()
bird <- filter(LPI2, Common.Name == "Grey seal")
head(bird)
bird <- na.omit(bird)
base_hist <- ggplot(bird, aes(x=abundance))
+ geom_histogram()
base_hist <- ggplot(bird, aes(x=abundance))
+ geom_histogram()
View(bird)
base_hist <- ggplot(bird, aes(x=abundance))
+ geom_histogram()
base_hist <- ggplot(bird, aes(x=abundance)) +
geom_histogram()
base_hist
base_hist <- ggplot(bird, aes(x=abundance)) +
geom_histogram(binwidth = 250, colours = "#8B5A00", fill="CD8409") +
geom_vline(aes(xintercept=mean(abundance)), colours = "red", linetype = "dashed", size = 1) +
theme_bw()
base_hist
base_hist <- ggplot(bird, aes(x=abundance)) +
geom_histogram(binwidth = 250, colours = "#8B5A00", fill="CD8409") +
geom_vline(aes(xintercept=mean(abundance)), colours = "red", linetype = "dashed", size = 1) +
theme_bw()
base_hist <- ggplot(bird, aes(x=abundance))
base_hist <- ggplot(bird, aes(x=abundance)) +
geom_histogram(binwidth = 250, colour = "#8B5A00", fill="CD8409")
base_hist <- ggplot(bird, aes(x=abundance)) +
geom_histogram(binwidth = 250, colour = "#8B5A00", fill="CD8409") +
geom_vline(aes(xintercept=mean(abundance)), colour = "red", linetype = "dashed", size = 1)
base_hist <- ggplot(bird, aes(x=abundance)) +
geom_histogram(binwidth = 250, colour = "#8B5A00", fill="CD8409") +
geom_vline(aes(xintercept=mean(abundance)), colour = "red", linetype = "dashed", size = 1) +
theme_bw()
base_hist
base_hist
base_hist <- ggplot(bird, aes(x=abundance)) +
geom_histogram(binwidth = 250, colour = "#8B5A00", fill="#CD8409") +
geom_vline(aes(xintercept=mean(abundance)), colour = "red", linetype = "dashed", size = 1) +
theme_bw()
base_hist
library(swirl)
swirl()
swirl()
swirl()
data(cars)
?cars
swirl()
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function")
boring_function("My first function!")
boring_function()
boring_function
submit
submit()
my_mean(c(4,5,10))
submit()
submit()
reminder(5)
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate()
evaluate(std, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1],c(8, 4, 0))
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[length(x)]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("GHESBORO")
submit()
submit()
mad_libs(place = "El to cueo", adjective = "brusa", noun = "Stocasso")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
nxt()
nxt()
submit()
skyp()
exit
exit()
quit()
library(swirl)
swirl()
submit()
swirl()
quit
quit()
lapply(list("plyr", #ddply function for dataframe manipulation
"ggmap", #mapping
"ggplot2", #plotting
"leaflet", #interactive mapping
"sp", #spatial point creation
"spdep", #nearest neighbor calculations
"knitr", #output tables - see kable
"tm", #text mining package
"raster", #cropping spatial object
"rgdal", #exporting shapefiles
"spatstat"), #convex hulls
require, character.only = TRUE)
library(dyplr)
.libPaths()
.libPaths("D:/Documents/R-library")
.libPaths()
.libPaths()
.libPaths("D:/Documents/R-library")
.libPaths()
.libPaths(c("D:/Documents/R-library"))
.libPaths()
.libPaths(c(libpath("D:/Documents/R-library")))
.libPaths(c(.libpath("D:/Documents/R-library")))
.libPaths(c(.libPath("D:/Documents/R-library")))
.libPaths(c(.libPaths("D:/Documents/R-library")))
.libPaths()
?.libPaths
.libPaths("D:/Documents/R-library")
.libPaths()
.libPaths()
.libPaths(c(.libpath(),"D:/Documents/R-library"))
.libPaths(c(.libPaths(),"D:/Documents/R-library"))
.libPaths()
.libPaths(c(.libPaths()-1)
.libPaths(c(.libPaths())[1,2])
.libPaths(c(.libPaths())[1])
.libPaths()
.libPaths(c("D:/Documents/R-library",.libPaths()))
.libPaths()
.libPaths()
.libPaths(c("D:/Documents/R-library",.libPaths()))
.libPaths()
.libPaths()
path <- .libPaths()
path
install.packages("dyplr")
install.packages("ggplot2")
.libPaths()
library(ggplot2)
.Rprofile
## Where do you want to create the new site?
setwd("D:/Documents/R_site2")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
